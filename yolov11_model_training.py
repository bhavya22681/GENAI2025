# -*- coding: utf-8 -*-
"""Yolov11 model training.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aDESVDqi7RkXZ-fnUmRcS-PkiCVOl_zc
"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="1eo6E7AEf7m3Gyir59tW")
project = rf.workspace("roboflow-100").project("axial-mri")
version = project.version(2)
dataset = version.download("yolov11")

!nvidia-smi

import os
HOME = os.getcwd()
print(HOME)

# Commented out IPython magic to ensure Python compatibility.
# %pip install "ultralytics<=8.3.40" supervision roboflow
# prevent ultralytics from tracking your activity
!yolo settings sync=False
import ultralytics
ultralytics.checks()

!yolo task=detect mode=predict model=yolo11n.pt conf=0.25 source='/content/axial-MRI-2/train/images/00095_226_jpg.rf.ce04ee232a94aae25c234321180af73a.jpg' save=True

from IPython.display import Image as IPyImage

IPyImage(filename=f'{HOME}/axial-MRI-2/train/images/00088_145_jpg.rf.9d37385272e9007ec6d5a67542a719fc.jpg', width=600)

from ultralytics import YOLO
from PIL import Image
import requests

model = YOLO('yolo11n.pt')
image = Image.open("/content/axial-MRI-2/train/images/00090_157_jpg.rf.1725fb445e702abcafcaf0c96dce9f0a.jpg")
result = model.predict(image, conf=0.25)[0]

result.boxes.xyxy

result.boxes.conf

result.boxes.cls

import supervision as sv

detections = sv.Detections.from_ultralytics(result)

box_annotator = sv.BoxAnnotator()
label_annotator = sv.LabelAnnotator(text_color=sv.Color.BLACK)

annotated_image = image.copy()
annotated_image = box_annotator.annotate(annotated_image, detections=detections)
annotated_image = label_annotator.annotate(annotated_image, detections=detections)

sv.plot_image(annotated_image, size=(10, 10))

# Commented out IPython magic to ensure Python compatibility.
!mkdir {HOME}/datasets
# %cd {HOME}/datasets

from google.colab import userdata
from roboflow import Roboflow
!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="1eo6E7AEf7m3Gyir59tW")
project = rf.workspace("roboflow-100").project("axial-mri")
version = project.version(2)
dataset = version.download("yolov11")

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=train model=yolo11s.pt data={dataset.location}/data.yaml epochs=10 imgsz=640 plots=True

!ls {HOME}/runs/detect/train/

!yolo task=detect mode=val model={HOME}/runs/detect/train/weights/best.pt data={dataset.location}/data.yaml

!yolo task=detect mode=predict model={HOME}/runs/detect/train/weights/best.pt conf=0.25 source={dataset.location}/test/images save=True

import glob
import os
from IPython.display import Image as IPyImage, display

latest_folder = max(glob.glob(f'{HOME}/runs/detect/predict*/'), key=os.path.getmtime)
for img in glob.glob(f'{latest_folder}/*.jpg')[:10]:
    display(IPyImage(filename=img, width=600))
    print("\n")



